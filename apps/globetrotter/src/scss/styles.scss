@use 'sass:map';
@use 'main';
@forward 'main';

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

body {
  color: map.get(main.$color, lightest);
  background: map.get(main.$color, darkest);
  font-family: main.$font-stack;
  font-size: map.get(main.$font-size, 20);
  font-weight: map.get(main.$font-weight, normal);
  line-height: map.get(main.$line-height, small);
  position: relative;
  @include main.custom-scrollbar;

  @include main.tablet {
    font-size: map.get(main.$font-size, 24);
  }
}

sup {
  position: relative;
  bottom: 10px;
  font-size: 16px;
}

.bold {
  font-weight: map.get(main.$font-weight, bold);
}

.small-caps {
  margin-bottom: map.get(main.$spacing, 8);
  font-size: map.get(main.$font-size, 16);
  font-weight: map.get(main.$font-weight, bold);
  text-transform: uppercase;
  letter-spacing: 1px;
  color: map.get(main.$color, medium);
}

// Component styling overrides

app-root {
  .core-button {
    padding: map.get(main.$spacing, 2) 0;
    width: map.get(main.$spacing, 128);
    color: map.get(main.$color, darkest);
    background: map.get(main.$color, lightest);
    font-family: main.$font-stack;
    font-size: map.get(main.$font-size, 20);
    border: map.get(main.$border, thin) solid map.get(main.$color, lightest);
    border-radius: map.get(main.$border, radius);

    &--primary {
      color: map.get(main.$color, darkest);
      background: map.get(main.$color, lightest);

      &:hover {
        background: lighten(map.get(main.$color, lightest), 10%);
      }

      &:disabled {
        background: map.get(main.$color, medium);
      }
    }

    &--secondary {
      color: map.get(main.$color, lightest);
      background: transparent;

      &:hover {
        background: lighten(map.get(main.$color, darkest), 10%);
      }

      &:disabled {
        color: map.get(main.$color, medium);
      }
    }

    &:disabled {
      border-color: map.get(main.$color, medium);
    }
  }

  .core-checkbox {
    --checkbox-color-hover: #{map.get(main.$color, medium)};
    --label-margin: #{map.get(main.$spacing, 12)};
    --checkbox-border: #{map.get(main.$color, lightest)};
    --checkmark-color: #{map.get(main.$color, lightest)};
  }

  [data-level='1'] > .core-checkbox--checked,
  [data-level='1'] > .core-checkbox--indeterminate {
    --checkbox-border: #{map.get(main.$color, lightest)};
    --checkmark-color: #{map.get(main.$color, darkest)};
    --checkbox-color: #{map.get(main.$color, lightest)};
  }

  [data-level='1'] > .core-checkbox > .core-checkbox__container {
    font-weight: bold;
  }

  .core-checkbox--unchecked {
    --checkbox-border: #{map.get(main.$color, medium)};
    --checkmark-color: #{map.get(main.$color, medium)};
    color: map.get(main.$color, medium);
  }

  .core-search-input {
    &__field {
      padding-right: map.get(main.$spacing, 32);
    }

    &__clear {
      width: map.get(main.$spacing, 32);
      color: map.get(main.$color, medium);
    }
  }
}
